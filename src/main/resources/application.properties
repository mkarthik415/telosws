spring.datasource.url=jdbc:mysql://uc1.nodecluster.net:3306/connect_telos?autoReconnect=true
spring.datasource.username=connect_telos
spring.datasource.password=hydtelos
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

application.message=Hello, Karthik

quartz.enabled=true

samplejob.frequency=2000



#spring.datasource.url=jdbc:oracle:thin:@localhost:1521/xe
#spring.datasource.username=xuser
#spring.datasource.password=xuser
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver



spring.mail.protocol=smtp
spring.mail.host=mail.connect2telos.com
#spring.mail.smtp.host=smtp.gmail.com
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 26
#spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.from=do_not_reply@connect2telos.com
spring.mail.username=do_not_reply@connect2telos.com
spring.mail.password=hydtelos
#spring.mail.from=mail@teloshyd.com
#spring.mail.username=teloshyd
#spring.mail.password=telos13579
#mail.smtp.starttls.enable=true


######Google mail OAuth2 credentials
google.p12.path=connect2telos-b7ebc31ad71f.p12
google.serviceAccount.id=812997458449-e1cruaqbsg45oq68ius69d8d8hvgcpol@developer.gserviceaccount.com
google.originMailAddress=mail@teloshyd.com

######Amazon s3 cloud credentials
S3_ACCESS_KEY = AKIAJHZ3VRBDDKGKDMOQ
S3_SECRET_KEY = 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

GET_USER_SQL = select id,team from account where username = :username and password = :password

GET_CLIENT_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, \
date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' \
AND INSURED_NAME LIKE '%' :clientName '%'

GET_VEHICLE_NUM_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, \
date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND VEHICLE_NO \
LIKE '%' :vehicleNumber '%'


GET_START_DATE_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND INSURANCE_FROM LIKE '%' :startDate '%'

GET_POLICY_NUM_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND POLICY_CERTIFICATE_NO LIKE '%' :policyNumber '%'


GET_PHONE_NUM_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND PHONE_NO LIKE '%' :phoneNumber '%'


GET_EMAIL_ID_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND EMAIL LIKE '%' :emailId '%'


GET_SERIAL_NUM_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND id = :id


GET_ALL_EMAIL_IDS_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where INSURANCE_FROM > '2014-04-01' and CREATED_ON > '2014-04-01' \
and EMAIL is not null group by EMAIL


GET_DOCUMENTS = select S.id,S.name,S.scanned,S.description from scan_email SE join scan S on SE.SCAN_ID = S.ID where SE.CLIENT_ID =:clientId


CREATE_EMAIL_LOG = INSERT INTO email(address, client_id, message, user_id) VALUES(:address, :clientId, :message, :userId)


TYPES_OF_POLICIES = SELECT count(*) Number,DEPARTMENT,YEAR(INSURANCE_FROM) years \
                    from test_prefixTELOS where YEAR(INSURANCE_FROM) in (:fromYear,:toYear) \
  and DEPARTMENT is not null group by DEPARTMENT,YEAR(INSURANCE_FROM) order by years,DEPARTMENT


GET_RENEWAL_CLIENTS =   select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where (INSURANCE_TO = DATE_ADD(CURRENT_DATE,INTERVAL 3 DAY) or INSURANCE_TO = DATE_ADD(CURRENT_DATE,INTERVAL 15 DAY) \
or INSURANCE_TO = DATE_ADD(CURRENT_DATE,INTERVAL 30 DAY) AND (PHONE_NO is not null or SECONDARY_PHONE_NO is not null)) AND id NOT IN (select expired_ID from renewals)


LOG_SMS = INSERT INTO sms(client_id, template_id, phone_number, CREATED_BY) VALUES(:clientId, :template, :phoneNumber, :userId)
